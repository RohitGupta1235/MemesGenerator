[{"C:\\Users\\rohit\\Desktop\\ReactProject\\ReactMemesGenerator\\src\\index.js":"1","C:\\Users\\rohit\\Desktop\\ReactProject\\ReactMemesGenerator\\src\\App.js":"2","C:\\Users\\rohit\\Desktop\\ReactProject\\ReactMemesGenerator\\src\\components\\Header.js":"3","C:\\Users\\rohit\\Desktop\\ReactProject\\ReactMemesGenerator\\src\\components\\Meme.js":"4","C:\\Users\\rohit\\Desktop\\ReactProject\\New folder\\src\\index.js":"5","C:\\Users\\rohit\\Desktop\\ReactProject\\New folder\\src\\App.js":"6","C:\\Users\\rohit\\Desktop\\ReactProject\\New folder\\src\\components\\Header.js":"7","C:\\Users\\rohit\\Desktop\\ReactProject\\New folder\\src\\components\\Meme.js":"8","C:\\Users\\rohit\\Desktop\\Memes\\src\\index.js":"9","C:\\Users\\rohit\\Desktop\\Memes\\src\\App.js":"10","C:\\Users\\rohit\\Desktop\\Memes\\src\\components\\Meme.js":"11","C:\\Users\\rohit\\Desktop\\Memes\\src\\components\\Header.js":"12"},{"size":767,"mtime":1669384033606,"results":"13","hashOfConfig":"14"},{"size":211,"mtime":1669384261208,"results":"15","hashOfConfig":"14"},{"size":359,"mtime":1677338116745,"results":"16","hashOfConfig":"14"},{"size":2033,"mtime":1677336708663,"results":"17","hashOfConfig":"14"},{"size":767,"mtime":1669384033606,"results":"18","hashOfConfig":"19"},{"size":211,"mtime":1669384261208,"results":"20","hashOfConfig":"19"},{"size":359,"mtime":1677338116745,"results":"21","hashOfConfig":"19"},{"size":2033,"mtime":1677336708663,"results":"22","hashOfConfig":"19"},{"size":767,"mtime":1669384033606,"results":"23","hashOfConfig":"24"},{"size":211,"mtime":1669384261208,"results":"25","hashOfConfig":"24"},{"size":2033,"mtime":1677336708663,"results":"26","hashOfConfig":"24"},{"size":359,"mtime":1677338116745,"results":"27","hashOfConfig":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pxr6xe",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cdp7ht",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y0bfvm",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rohit\\Desktop\\ReactProject\\ReactMemesGenerator\\src\\index.js",[],[],"C:\\Users\\rohit\\Desktop\\ReactProject\\ReactMemesGenerator\\src\\App.js",[],[],"C:\\Users\\rohit\\Desktop\\ReactProject\\ReactMemesGenerator\\src\\components\\Header.js",[],[],"C:\\Users\\rohit\\Desktop\\ReactProject\\ReactMemesGenerator\\src\\components\\Meme.js",["65","66"],[],"C:\\Users\\rohit\\Desktop\\ReactProject\\New folder\\src\\index.js",[],[],"C:\\Users\\rohit\\Desktop\\ReactProject\\New folder\\src\\App.js",[],[],"C:\\Users\\rohit\\Desktop\\ReactProject\\New folder\\src\\components\\Header.js",[],[],"C:\\Users\\rohit\\Desktop\\ReactProject\\New folder\\src\\components\\Meme.js",["67","68"],[],"import React from \"react\";\r\n//simport memesData  from \"../memesData\"\r\n\r\nexport default function Meme() {\r\n  /**\r\n   * Challenge:\r\n   * 1. Set up the text inputs to save to\r\n   *    the `topText` and `bottomText` state variables.\r\n   * 2. Replace the hard-coded text on the image with\r\n   *    the text being saved to state.\r\n   */\r\n\r\n  const [meme, setMeme] = React.useState({\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    randomImage: \"http://i.imgflip.com/1bij.jpg\",\r\n  });\r\n  const [allMemes, setAllMemes] = React.useState([]);\r\n\r\n  React.useEffect(async () => {\r\n    const res = await fetch(\"https://api.imgflip.com/get_memes\");\r\n    const data = await res.json();\r\n    setAllMemes(data.data.memes);\r\n  }, []);\r\n\r\n  function getMemeImage() {\r\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\r\n    const url = allMemes[randomNumber].url;\r\n    setMeme((prevMeme) => ({\r\n      ...prevMeme,\r\n      randomImage: url,\r\n    }));\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setMeme((prevMeme) => ({\r\n      ...prevMeme,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Top text\"\r\n          className=\"form--input\"\r\n          name=\"topText\"\r\n          value={meme.topText}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Bottom text\"\r\n          className=\"form--input\"\r\n          name=\"bottomText\"\r\n          value={meme.bottomText}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"form--button\" onClick={getMemeImage}>\r\n          Get a new meme image ðŸ–¼\r\n        </button>\r\n      </div>\r\n      <div className=\"meme\">\r\n        <img src={meme.randomImage} className=\"meme--image\" />\r\n        <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n        <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n      </div>\r\n      <div className=\"p\"></div>\r\n    </main>\r\n  );\r\n}\r\n","C:\\Users\\rohit\\Desktop\\Memes\\src\\index.js",[],[],"C:\\Users\\rohit\\Desktop\\Memes\\src\\App.js",[],[],"C:\\Users\\rohit\\Desktop\\Memes\\src\\components\\Meme.js",["69","70"],[],"C:\\Users\\rohit\\Desktop\\Memes\\src\\components\\Header.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":20,"column":19,"nodeType":"73","endLine":24,"endColumn":4},{"ruleId":"74","severity":1,"message":"75","line":67,"column":9,"nodeType":"76","endLine":67,"endColumn":63},{"ruleId":"71","severity":1,"message":"72","line":20,"column":19,"nodeType":"73","endLine":24,"endColumn":4},{"ruleId":"74","severity":1,"message":"75","line":67,"column":9,"nodeType":"76","endLine":67,"endColumn":63},{"ruleId":"71","severity":1,"message":"72","line":20,"column":19,"nodeType":"73","endLine":24,"endColumn":4},{"ruleId":"74","severity":1,"message":"75","line":67,"column":9,"nodeType":"76","endLine":67,"endColumn":63},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]