{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Desktop\\\\ReactProject\\\\New folder\\\\src\\\\components\\\\Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n//simport memesData  from \"../memesData\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  /**\r\n   * Challenge:\r\n   * 1. Set up the text inputs to save to\r\n   *    the `topText` and `bottomText` state variables.\r\n   * 2. Replace the hard-coded text on the image with\r\n   *    the text being saved to state.\r\n   */\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(async () => {\n    const res = await fetch(\"https://api.imgflip.com/get_memes\");\n    const data = await res.json();\n    setAllMemes(data.data.memes);\n  }, []);\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: url\n    }));\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"V/zFIGuHS9qWH27rPvyxUl6krkM=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setAllMemes","useEffect","res","fetch","data","json","memes","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target"],"sources":["C:/Users/rohit/Desktop/ReactProject/New folder/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\r\n//simport memesData  from \"../memesData\"\r\n\r\nexport default function Meme() {\r\n  /**\r\n   * Challenge:\r\n   * 1. Set up the text inputs to save to\r\n   *    the `topText` and `bottomText` state variables.\r\n   * 2. Replace the hard-coded text on the image with\r\n   *    the text being saved to state.\r\n   */\r\n\r\n  const [meme, setMeme] = React.useState({\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    randomImage: \"http://i.imgflip.com/1bij.jpg\",\r\n  });\r\n  const [allMemes, setAllMemes] = React.useState([]);\r\n\r\n  React.useEffect(async () => {\r\n    const res = await fetch(\"https://api.imgflip.com/get_memes\");\r\n    const data = await res.json();\r\n    setAllMemes(data.data.memes);\r\n  }, []);\r\n\r\n  function getMemeImage() {\r\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\r\n    const url = allMemes[randomNumber].url;\r\n    setMeme((prevMeme) => ({\r\n      ...prevMeme,\r\n      randomImage: url,\r\n    }));\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setMeme((prevMeme) => ({\r\n      ...prevMeme,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Top text\"\r\n          className=\"form--input\"\r\n          name=\"topText\"\r\n          value={meme.topText}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Bottom text\"\r\n          className=\"form--input\"\r\n          name=\"bottomText\"\r\n          value={meme.bottomText}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"form--button\" onClick={getMemeImage}>\r\n          Get a new meme image ðŸ–¼\r\n        </button>\r\n      </div>\r\n      <div className=\"meme\">\r\n        <img src={meme.randomImage} className=\"meme--image\" />\r\n        <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n        <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n      </div>\r\n      <div className=\"p\"></div>\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA;AAEA,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B;AACF;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC;IACrCC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;EAElDJ,KAAK,CAACU,SAAS,CAAC,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;IAC5D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC7BL,WAAW,CAACI,IAAI,CAACA,IAAI,CAACE,KAAK,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,YAAY,GAAG;IACtB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGZ,QAAQ,CAACa,MAAM,CAAC;IAChE,MAAMC,GAAG,GAAGd,QAAQ,CAACS,YAAY,CAAC,CAACK,GAAG;IACtCnB,OAAO,CAAEoB,QAAQ,KAAM;MACrB,GAAGA,QAAQ;MACXhB,WAAW,EAAEe;IACf,CAAC,CAAC,CAAC;EACL;EAEA,SAASE,YAAY,CAACC,KAAK,EAAE;IAC3B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCzB,OAAO,CAAEoB,QAAQ,KAAM;MACrB,GAAGA,QAAQ;MACX,CAACG,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,UAAU;QACtB,SAAS,EAAC,aAAa;QACvB,IAAI,EAAC,SAAS;QACd,KAAK,EAAEzB,IAAI,CAACG,OAAQ;QACpB,QAAQ,EAAEmB;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,aAAa;QACzB,SAAS,EAAC,aAAa;QACvB,IAAI,EAAC,YAAY;QACjB,KAAK,EAAEtB,IAAI,CAACI,UAAW;QACvB,QAAQ,EAAEkB;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QAAQ,SAAS,EAAC,cAAc;QAAC,OAAO,EAAER,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE9C;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,GAAG,EAAEd,IAAI,CAACK,WAAY;QAAC,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eACtD;QAAI,SAAS,EAAC,gBAAgB;QAAA,UAAEL,IAAI,CAACG;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eAClD;QAAI,SAAS,EAAC,mBAAmB;QAAA,UAAEH,IAAI,CAACI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD,eACN;MAAK,SAAS,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEX;AAAC,GAtEuBL,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}